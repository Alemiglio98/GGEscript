\\supervised classification

var L8: imagecollection "USGS Landsat 8 Collection 2 Tier 1 TOA Reflectance"
var Geometry: multipoint
var selection = L8.filterBounds(Geometry)'
                  .filterDate('2022-01-01','2022-31-12')
                  .filterMetadata('CLOUD-COVER', 'less_than', 1)
                  .mean() \\take a mean value to reduce reflactance differencies between different detected imagies
Map.addLayer(selection, {bands:["B4", "B3", "B2"]})
\\ at this point generate training sites and classes (for example water, vegetation and soil)

var training_points = water.merge(vegetation).merge(soil)
\\tool to get a spectral value table
var training_data = selection.sampleRegion({
 collection: training_points,
 proprierties:['LC'],
 scale: 30
 })
print(training_data)  \\ then you'll get specrtal value for each point

\\ classify
var classifier = ee.Classifier.cart() 
classifier = classifier.train({
  features: training data,
  classProperty: "LC"
  inputProperties: ["B1", "B2", "B3", "B4","B5","B6","B7","B8","B9","B10","B11"] 
})
  \\print(classifier) to get class infos
var classified_image =selectio.classify(classifier)
Map.addLayer(classified_image, {palette:["0049bf","07c46f","ddd60b","c91700"]}, min:0, max:3)





